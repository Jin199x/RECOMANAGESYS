<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>